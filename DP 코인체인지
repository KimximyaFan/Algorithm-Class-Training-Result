/*
동전 거슬러줘야 하는 값을 1씩 증가시켜서 
그 부분 해에 대해서 최적해를 구해나간다.
냅색문제랑 비슷, 냅색 문제는 가방의 무게를 1kg씩 늘려나간다.
*/

import java.io.*;
import java.util.*;

public class AAIG 
{
	static ArrayList<Integer> A = new ArrayList<>();
	
	public static void main (String[] args) throws IOException
	{
		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
		StringTokenizer st;
		
		st = new StringTokenizer(input.readLine(), " ,");
		
		while (st.hasMoreTokens())
			A.add( Integer.parseInt(st.nextToken()) );
		
		int M = Integer.parseInt(input.readLine());
		
		int[] C = new int[M+1];
		
		for (int i=1; i<=M; i++)
			C[i] = 100000;
		
		for (int i=1; i<=M; i++)
		{
			for (int j=0; j<A.size(); j++)
			{
				int d = A.get(j);
				
				if (d <= i && C[i-d]+1 < C[i])
					C[i] = C[i-d]+1;
			}
		}
		
		output.write(C[M] + "");
		output.close();
	}
}
