/*
배열에 덮어 씌우기위한 임시 배열인 sorted는 
스태틱으로 선언해서 쓰면 2배 빠름
*/

import java.io.*;

public class AAFW 
{
	public static int[] sorted;
	
	public static void main (String[] args) throws IOException
	{
		BufferedReader input = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter output = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int n = Integer.parseInt(input.readLine());
		
		int[] A = new int[n];
		
		for (int i=0; i<n; i++)
			A[i] = Integer.parseInt(input.readLine());
		
		sorted = new int[A.length];
		MergeSort(A,0,n-1);
		
		for (int i=0; i<n; i++)
			output.write(A[i]+"\n");
		
		output.close();
	}
	
	public static void MergeSort(int[] A, int low, int high)
	{
		if (low == high)
			return;
		
		int middle =(low + high)/2; 
		MergeSort(A, low, middle); 
		MergeSort(A, middle+1, high); 
		Merge(A, low, middle, high);
	}
	
	public static void Merge(int[] A, int low, int mid, int high)
	{
		int n1 = low;
		int n2 = mid+1; 
		int s = low;
		
		
		while (n1 <= mid && n2 <= high) 
		{
			if (A[n1] <= A[n2])
				sorted[s++] = A[n1++];
			else 
				sorted[s++] = A[n2++];
		}
		if (n1 > mid) 
		{ 
			while (n2 <= high) 
				sorted[s++] = A[n2++];
		}
		else 
		{
			while (n1 <= mid) 
				sorted[s++] = A[n1++];
		}
		for (int i = low; i <= high; i++) 
			A[i] = sorted[i];
	}
}
